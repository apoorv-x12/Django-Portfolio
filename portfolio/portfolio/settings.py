"""
Django settings for portfolio project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7m5t=#4e#q@uj=!l0t8^kdp291hy1lu#7)6p@8@ch-k^hn54k^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['localhost','apoorv123xyz.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'portfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR,'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'portfolio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': str(BASE_DIR / 'db.sqlite3'), 
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS= (
 os.path.join(BASE_DIR,'static'),
) # comma is important at last since this is a tuple

STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Application Realated Data

DATA = json.load(open(os.path.join(BASE_DIR,'data.json')))

# actually DATA gets same details like DATA1 from data.json but emojis are not rendered so hence i used below
# DATA1 for them and i have redundantly used DATA1 i know(means i have not defined only those keys in DATA1 with emojis but defined all)
# i did this redundancy coz 1->laziness 2->not always is redundancy bad!(this opinion is subject to change!!)
DATA1 = { 

   "NAME":"Apoorv Shrivastava",

   "ABOUT_ME":'''Hi there I am Apoorv Shrivastava ðŸ‘‹
                ðŸ”­ Iâ€™m currently working on some Django Projects and Web Development.
                ðŸŒ± Iâ€™m currently learning Django Framework(Server Side Scripting) and Front end framework(React).
                ðŸ‘¯ Iâ€™m looking to collaborate on Web Development,App development, Devops, Kubernetes.
                ðŸ¤” Iâ€™m looking for help with Kubernetes,Devops.''',

    "LANGUAGES": [
            "C++ ðŸŒ±",
            "Java ðŸŒ±",
            "Python ðŸŒ±",
            "JavaScript ðŸŒ±",
            "Django ðŸ”­",    
         ],

    "PROJECTS":
           [
            ("filter_drama","My Portfolio Website (click here to read project's summary)",
        '''My Portfolio Website is my project that i made using 
            basic css, html, javascript and django along with materialize.css framework.''',
           "click here to visit the website","#","red lighten-3"),
        
       ("place","The Lost World (Game) (click here to read project's summary)",
        '''The Lost World is a 2D sidescrolling game that i made with my college group using Unity and C# language.'''
           ,"click here to see gameplay video","https://www.youtube.com/watch?v=36LNr126_SY","lime lighten-4"),

        ("whatshot","World Chess Champions (click here to read project's summary)",
        '''This is a tribute website i made using very basic js, css, html as a tribute to my 3 favourite world chess champions.'''
            ,"click here to visit the website","https://apoorv-x12.github.io/World-chess-champions/","orange lighten-4"),
           ],

    "BOOKS_SUMMARY":
        ''' These are the books that i hold very sacred to me, the teachings of These
            books are beyond all my stupid ideations,prejudices and notions about myself and i try to be 
            like the sages who wrote these books but the difference between  me and them is like 
            a small dust of sand and the cosmos.''',

}